
           #union set
seta={1,2,3}
setb={3,4,5}
unionset=seta.union(setb)
print("union using union method:",unionset)
            #intersection set
seta={1,2,3}
setb={3,4,5}
intersectionset=seta.intersection(setb)
print("intersection using intersection method:",intersectionset)

            #difference set
seta={1,2,3}
setb={3,4,5}
differenceset=seta.difference(setb)
print("difference using difference method:",differenceset)

             #subset
seta={1,2,3,4,5,6}
setb={3,4,5}
print(setb.issubset(seta))

             #superset
seta={1,2,3,4,5}
setb={3,4,5}
print(setb.issuperset(seta))


      
             #symmetric
seta={1,2,3}
setb={3,4,5}
symmetric_diff_operator=seta.difference_update(setb)
print("symmetric difference using^ operator:",symmetric_diff_operator)

             #Asymmetric
seta={1,2,3}
setb={4,5,6}
asymmetric_diff_operator=seta.difference_update(setb)
print("asymmetric using difference update method:",asymmetric_diff_operator)
    #list
list1=[1,2,3,4]
list2=[11,23,45]
list3=[list1,list2]
print(list3)
      

        #tuple
a=(1,2,3,4)
print(a)
     
     #disjoint
seta={1,2,3}
setb={4,5}
print("are seta and setb are disjoint:",seta.isdisjoint(setb))
      




